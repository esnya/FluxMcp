<Project>
  <!-- Basic build settings -->
  <PropertyGroup Condition="'$(OS)' == 'Windows_NT'">
    <TargetFramework>net472</TargetFramework>
  </PropertyGroup>
  <PropertyGroup Condition="'$(OS)' != 'Windows_NT'">
    <TargetFramework>net9.0</TargetFramework>
  </PropertyGroup>
  <PropertyGroup Condition="'$(OS)' == 'Windows_NT' and '$(MSBuildProjectName)' == 'NetfxMcp.Tests'">
    <TargetFrameworks>net472;net9.0</TargetFrameworks>
    <TargetFramework></TargetFramework>
  </PropertyGroup>
  <PropertyGroup>
    <LangVersion>latest</LangVersion>
    <Nullable>enable</Nullable>
    <Deterministic>true</Deterministic>
    <DelaySign>False</DelaySign>
    <ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>
  </PropertyGroup>

  <!-- Code quality and analysis settings -->
  <PropertyGroup>
    <EnableNETAnalyzers>true</EnableNETAnalyzers>
    <AnalysisLevel>latest-all</AnalysisLevel>
    <AnalysisMode>All</AnalysisMode>
    <WarningLevel>9999</WarningLevel>
    <EnforceCodeStyleInBuild>true</EnforceCodeStyleInBuild>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <RemoveUnusedImports>true</RemoveUnusedImports>
    <_SkipUpgradeNetAnalyzersNuGetWarning>true</_SkipUpgradeNetAnalyzersNuGetWarning>
  </PropertyGroup>

  <!-- Debug settings -->
  <PropertyGroup>
    <DebugType Condition="'$(Configuration)'=='Debug'">embedded</DebugType>
  </PropertyGroup>

  <!-- Package and license information -->
  <PropertyGroup>
    <Version>0.1.0</Version>
    <Authors>esnya</Authors>
    <Copyright>Copyright (c) 2025 $(Authors)</Copyright>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageRequireLicenseAcceptance>True</PackageRequireLicenseAcceptance>
    <PackageReadmeFile>README.md</PackageReadmeFile>
  </PropertyGroup>

  <!-- Repository information -->
  <PropertyGroup>
    <RepositoryUrl>https://github.com/esnya/FluxMcp</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageProjectUrl>$(RepositoryUrl)</PackageProjectUrl>
  </PropertyGroup>

  <!-- Resonite environment configuration -->
  <PropertyGroup Condition="'$(ResonitePath)'==''">
    <ResonitePath>$(MSBuildThisFileDirectory)Resonite/</ResonitePath>
    <ResonitePath Condition="Exists('C:\Program Files (x86)\Steam\steamapps\common\Resonite\')">C:\Program Files (x86)\Steam\steamapps\common\Resonite\</ResonitePath>
    <ResonitePath Condition="Exists('$(HOME)/.steam/steam/steamapps/common/Resonite/')">$(HOME)/.steam/steam/steamapps/common/Resonite/</ResonitePath>
  </PropertyGroup>

  <!-- Resonite mod settings -->
  <PropertyGroup>
    <CopyToMods Condition="'$(CopyToMods)'==''">true</CopyToMods>
  </PropertyGroup>

  <!-- Test project specific settings -->
  <PropertyGroup Condition="$(MSBuildProjectName.EndsWith('.Tests'))">
    <ImplicitUsings>enable</ImplicitUsings>
    <NoWarn>$(NoWarn);CS1591</NoWarn>
  </PropertyGroup>

  <!-- Common package references -->
  <ItemGroup>
    <!-- Code analysis -->
    <PackageReference Include="Microsoft.CodeAnalysis.Analyzers">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.CodeAnalysis.NetAnalyzers">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>

    <!-- Runtime -->
    <PackageReference Include="Microsoft.Extensions.Logging.Abstractions" />
    <PackageReference Include="ModelContextProtocol" />
  </ItemGroup>

  <!-- Test-specific packages -->
  <ItemGroup Condition="$(MSBuildProjectName.EndsWith('.Tests'))">
    <Using Include="Microsoft.VisualStudio.TestTools.UnitTesting" />
    <PackageReference Include="Microsoft.NET.Test.Sdk" />
    <PackageReference Include="MSTest" />
    <PackageReference Include="Moq" />
  </ItemGroup>
</Project>
