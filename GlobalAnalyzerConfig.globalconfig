# Global analyzer configuration for enhanced static analysis
is_global = true

# Code style and formatting rules
dotnet_diagnostic.IDE0005.severity = warning  # Remove unnecessary using directives
dotnet_diagnostic.CS8019.severity = warning   # Unnecessary using directive

# Enable all available code analysis rules
dotnet_analyzer_diagnostic.category-design.severity = warning
dotnet_analyzer_diagnostic.category-performance.severity = warning
dotnet_analyzer_diagnostic.category-security.severity = error
dotnet_analyzer_diagnostic.category-reliability.severity = warning
dotnet_analyzer_diagnostic.category-maintainability.severity = suggestion
dotnet_analyzer_diagnostic.category-usage.severity = warning
dotnet_analyzer_diagnostic.category-naming.severity = suggestion
dotnet_analyzer_diagnostic.category-style.severity = suggestion

# Specific high-value rules
dotnet_diagnostic.CA1001.severity = error     # Types that own disposable fields should be disposable
dotnet_diagnostic.CA1009.severity = warning   # Declare event handlers correctly
dotnet_diagnostic.CA1016.severity = warning   # Mark assemblies with assembly version
dotnet_diagnostic.CA1033.severity = warning   # Interface methods should be callable by child types
dotnet_diagnostic.CA1049.severity = error     # Types that own native resources should be disposable
dotnet_diagnostic.CA1060.severity = warning   # Move pinvokes to native methods class
dotnet_diagnostic.CA1061.severity = warning   # Do not hide base class methods
dotnet_diagnostic.CA1063.severity = error     # Implement IDisposable Correctly
dotnet_diagnostic.CA1065.severity = error     # Do not raise exceptions in unexpected locations
dotnet_diagnostic.CA1301.severity = error     # Avoid duplicate accelerators
dotnet_diagnostic.CA1400.severity = error     # P/Invoke entry points should exist
dotnet_diagnostic.CA1401.severity = error     # P/Invokes should not be visible
dotnet_diagnostic.CA1403.severity = error     # Auto layout types should not be COM visible
dotnet_diagnostic.CA1404.severity = error     # Call GetLastError immediately after P/Invoke
dotnet_diagnostic.CA1405.severity = error     # COM visible type base types should be COM visible
dotnet_diagnostic.CA1410.severity = error     # COM registration methods should be matched
dotnet_diagnostic.CA1415.severity = error     # Declare P/Invokes correctly
dotnet_diagnostic.CA1821.severity = warning   # Remove empty Finalizers
dotnet_diagnostic.CA1900.severity = error     # Value type fields should be portable
dotnet_diagnostic.CA1901.severity = error     # P/Invoke declarations should be portable
dotnet_diagnostic.CA2002.severity = error     # Do not lock on objects with weak identity
dotnet_diagnostic.CA2100.severity = error     # Review SQL queries for security vulnerabilities
dotnet_diagnostic.CA2101.severity = error     # Specify marshaling for P/Invoke string arguments
dotnet_diagnostic.CA2108.severity = error     # Review declarative security on value types
dotnet_diagnostic.CA2111.severity = error     # Pointers should not be visible
dotnet_diagnostic.CA2112.severity = error     # Secured types should not expose fields
dotnet_diagnostic.CA2114.severity = error     # Method security should be a superset of type
dotnet_diagnostic.CA2116.severity = error     # APTCA methods should only call APTCA methods
dotnet_diagnostic.CA2117.severity = error     # APTCA types should only extend APTCA base types
dotnet_diagnostic.CA2122.severity = error     # Do not indirectly expose methods with link demands
dotnet_diagnostic.CA2123.severity = error     # Override link demands should be identical to base
dotnet_diagnostic.CA2124.severity = error     # Wrap vulnerable finally clauses in outer try
dotnet_diagnostic.CA2126.severity = error     # Type link demands require inheritance demands
dotnet_diagnostic.CA2131.severity = error     # Security critical types may not participate in type equivalence
dotnet_diagnostic.CA2132.severity = error     # Default constructors must be at least as critical as base type default constructors
dotnet_diagnostic.CA2133.severity = error     # Delegates must bind to methods with consistent transparency
dotnet_diagnostic.CA2134.severity = error     # Methods must keep consistent transparency when overriding base methods
dotnet_diagnostic.CA2137.severity = error     # Transparent methods must contain only verifiable IL
dotnet_diagnostic.CA2138.severity = error     # Transparent methods must not call methods with the SuppressUnmanagedCodeSecurity attribute
dotnet_diagnostic.CA2140.severity = error     # Transparent code must not reference security critical items
dotnet_diagnostic.CA2141.severity = error     # Transparent methods must not satisfy LinkDemands
dotnet_diagnostic.CA2146.severity = error     # Types must be at least as critical as their base types and interfaces
dotnet_diagnostic.CA2147.severity = error     # Transparent methods may not use security asserts
dotnet_diagnostic.CA2149.severity = error     # Transparent methods must not call into native code
dotnet_diagnostic.CA2200.severity = error     # Rethrow to preserve stack details
dotnet_diagnostic.CA2202.severity = error     # Do not dispose objects multiple times
dotnet_diagnostic.CA2207.severity = error     # Initialize value type static fields inline
dotnet_diagnostic.CA2212.severity = error     # Do not mark serviced components with WebMethod
dotnet_diagnostic.CA2213.severity = error     # Disposable fields should be disposed
dotnet_diagnostic.CA2214.severity = error     # Do not call overridable methods in constructors
dotnet_diagnostic.CA2216.severity = error     # Disposable types should declare finalizer
dotnet_diagnostic.CA2220.severity = error     # Finalizers should call base class finalizer
dotnet_diagnostic.CA2229.severity = error     # Implement serialization constructors
dotnet_diagnostic.CA2231.severity = warning   # Overload operator equals on overriding value type Equals
dotnet_diagnostic.CA2232.severity = error     # Mark Windows Forms entry points with STAThread
dotnet_diagnostic.CA2235.severity = error     # Mark all non-serializable fields
dotnet_diagnostic.CA2236.severity = error     # Call base class methods on ISerializable types
dotnet_diagnostic.CA2237.severity = error     # Mark ISerializable types with serializable
dotnet_diagnostic.CA2238.severity = error     # Implement serialization methods correctly
dotnet_diagnostic.CA2240.severity = error     # Implement ISerializable correctly
dotnet_diagnostic.CA2241.severity = error     # Provide correct arguments to formatting methods
dotnet_diagnostic.CA2242.severity = error     # Test for NaN correctly

# Additional useful analyzers
dotnet_diagnostic.CA1308.severity = warning   # Normalize strings to uppercase
dotnet_diagnostic.CA1309.severity = warning   # Use ordinal stringcomparison
dotnet_diagnostic.CA1810.severity = warning   # Initialize reference type static fields inline
dotnet_diagnostic.CA1811.severity = warning   # Avoid uncalled private code
dotnet_diagnostic.CA1812.severity = warning   # Avoid uninstantiated internal classes
dotnet_diagnostic.CA1813.severity = warning   # Avoid unsealed attributes
dotnet_diagnostic.CA1814.severity = warning   # Prefer jagged arrays over multidimensional
dotnet_diagnostic.CA1815.severity = warning   # Override equals and operator equals on value types
dotnet_diagnostic.CA1819.severity = warning   # Properties should not return arrays
dotnet_diagnostic.CA1820.severity = warning   # Test for empty strings using string length
dotnet_diagnostic.CA1822.severity = suggestion # Mark members as static
dotnet_diagnostic.CA1823.severity = warning   # Avoid unused private fields
dotnet_diagnostic.CA1824.severity = warning   # Mark assemblies with NeutralResourcesLanguageAttribute
