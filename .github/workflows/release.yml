name: Release Build

on:
  push:
    branches:
      - master
    tags:
      - v*

env:
  MAIN_PROJECT: FluxMcp
  ARTIFACT_NAME: FluxMcp.dll

jobs:
  vtag:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get version from Directory.Build.props
        id: get_version
        run: |
          echo "Version=$(grep -oPm1 "(?<=<Version>)[^<]+" Directory.Build.props)" >> $GITHUB_OUTPUT

      - name: Pull tags
        run: git fetch --tags

      - name: Check if tag exists
        id: check_tag
        run: |
          echo "TagExists=$(git tag -l "v${{ steps.get_version.outputs.Version }}")" >> $GITHUB_OUTPUT

      - name: Create tag
        if: steps.check_tag.outputs.TagExists == ''
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git tag "v${{ steps.get_version.outputs.Version }}"
          git push origin "v${{ steps.get_version.outputs.Version }}"
    outputs:
      tagged: ${{ steps.check_tag.outputs.TagExists == '' }}
      tag: v${{ steps.get_version.outputs.Version }}

  build:
    if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v')
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build RML mod
        uses: esnya/build-rml-mod@v1
        with:
          project: ${{ github.workspace }}/${{ env.MAIN_PROJECT }}
          steam-login: ${{ secrets.STEAMLOGIN }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.MAIN_PROJECT }}/bin/Release/${{ env.ARTIFACT_NAME }}

  release:
    if: startsWith(github.ref, 'refs/tags/v') || (github.ref == 'refs/heads/master' && needs.vtag.outputs.tagged == 'true')
    needs:
      - vtag
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.vtag.outputs.tagged == 'true' && needs.vtag.outputs.tag || github.ref }}
          fetch-depth: 0

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ env.ARTIFACT_NAME }}
          generate_release_notes: true
          tag_name: ${{ needs.vtag.outputs.tagged == 'true' && needs.vtag.outputs.tag || github.ref }}
